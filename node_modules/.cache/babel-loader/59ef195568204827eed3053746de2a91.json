{"ast":null,"code":"var _jsxFileName = \"/Users/lcst/hv/hv1.1-web3/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetterPendingItem = () => {\n      window.myContract.methods.value().call().then(value => {\n        console.log(value);\n        this.setState({\n          value: value\n        });\n      });\n    };\n\n    this.Pending = () => {\n      var newPending = document.getElementById('pending').value;\n      window.myContract.methods.pending(newPending).send().on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      }).on('receipt', receipt => {\n        console.log({\n          receipt: receipt\n        });\n      }).on('error', (error, receipt) => {\n        console.log({\n          error: error,\n          receipt: receipt\n        });\n      });\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    //判断页面是否安装Metamask\n    if (typeof window.ethereum !== 'undefined') {\n      const ethereum = window.ethereum; //禁止自动刷新，metamask要求写的\n\n      ethereum.autoRefreshOnNetworkChange = false;\n\n      try {\n        //第一次链接Metamask\n        const accounts = await ethereum.enable();\n        console.log(accounts); //初始化Provider\n\n        const provider = window['ethereum'];\n        console.log(provider); //获取网络ID\n\n        console.log(provider.chainId); //实例化Web3\n\n        const web3 = new Web3(provider);\n        console.log(web3); //导入abi文件\n\n        const abi = require(\"./contract.abi.json\"); //定义合约地址\n\n\n        const address = \"0x54dB09d129B2A550164D1a6E1e2C9Cf40a568d60\"; //实例化合约\n\n        window.myContract = new web3.eth.Contract(abi.abi, address);\n        console.log(window.myContract);\n        window.defaultAccount = accounts[0].toLowerCase();\n        console.log(window.defaultAccount);\n        ethereum.on('accountsChanged', function (accounts) {\n          console.log(\"accountsChanged:\" + accounts);\n        });\n        ethereum.on('networkChanged', function (networkVersion) {\n          console.log(\"networkChanged:\" + networkVersion);\n        });\n      } catch (e) {}\n    } else {\n      console.log('没有metamask');\n    }\n  } //查询质押信息\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.GetterPendingItem();\n          },\n          children: \"GetterPendingItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.Pending();\n          },\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lcst/hv/hv1.1-web3/src/App.js"],"names":["React","Component","Web3","App","constructor","props","GetterPendingItem","window","myContract","methods","value","call","then","console","log","setState","Pending","newPending","document","getElementById","pending","send","on","transactionHash","confirmationNumber","receipt","error","state","componentDidMount","ethereum","autoRefreshOnNetworkChange","accounts","enable","provider","chainId","web3","abi","require","address","eth","Contract","defaultAccount","toLowerCase","networkVersion","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from \"web3\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\nasync componentDidMount() {\n  //判断页面是否安装Metamask\n  if (typeof window.ethereum !== 'undefined') {\n    const ethereum = window.ethereum\n    //禁止自动刷新，metamask要求写的\n    ethereum.autoRefreshOnNetworkChange = false\n\n    try {\n      //第一次链接Metamask\n      const accounts = await ethereum.enable()\n      console.log(accounts)\n      //初始化Provider\n      const provider = window['ethereum']\n      console.log(provider)\n      //获取网络ID\n      console.log(provider.chainId)\n      //实例化Web3\n      const web3 = new Web3(provider)\n      console.log(web3)\n      //导入abi文件\n      const abi = require(\"./contract.abi.json\")\n      //定义合约地址\n      const address = \"0x54dB09d129B2A550164D1a6E1e2C9Cf40a568d60\"\n      //实例化合约\n      window.myContract = new web3.eth.Contract(abi.abi,address)\n      console.log(window.myContract)\n      window.defaultAccount = accounts[0].toLowerCase()\n      console.log(window.defaultAccount)\n\n      ethereum.on('accountsChanged', function (accounts) {\n        console.log(\"accountsChanged:\" + accounts)\n      })\n      ethereum.on('networkChanged', function (networkVersion) {\n        console.log(\"networkChanged:\" + networkVersion)\n      })\n    } catch (e) {\n\n    }\n  } else {\n    console.log('没有metamask')\n  }\n}\n//查询质押信息\nGetterPendingItem = () => {\n  window.myContract.methods.value().call().then(value=>{\n    console.log(value)\n    this.setState({value:value})\n  })\n}\n\n //今日待领取\nPending =() =>{  \n  var newPending = document.getElementById('pending').value;\n  window.myContract.methods.pending(newPending).send()\n  .on('transactionHash',(transactionHash)=>{\n    console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n    console.log({ confirmationNumber: confirmationNumber, receipt: receipt })\n  })\n  .on('receipt',(receipt)=>{\n    console.log({ receipt: receipt })\n  })\n  .on('error',(error,receipt)=>{\n    console.log({ error: error, receipt: receipt })\n  })\n}\nrender() {\n  return (\n    <div>\n      <div>{this.state.value}</div>\n      <div>\n        <button onClick={() => { this.GetterPendingItem() }}>GetterPendingItem</button>\n      </div>\n      <div>\n        <button onClick={() => { this.Pending() }}>Pending</button>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}