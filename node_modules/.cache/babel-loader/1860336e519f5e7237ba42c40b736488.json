{"ast":null,"code":"var _jsxFileName = \"/Users/lcst/hv/hv1.1-web3/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetterPendingItem = () => {\n      window.myContract.methods.getPendingItem().call({\n        from: window.defaultAccount\n      }).then(value => {\n        console.log(value);\n      });\n    };\n\n    this.Pending = () => {\n      var newPending = document.getElementById('pending').value;\n      window.myContract.methods.pending(newPending).send().on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      }).on('receipt', receipt => {\n        console.log({\n          receipt: receipt\n        });\n      }).on('error', (error, receipt) => {\n        console.log({\n          error: error,\n          receipt: receipt\n        });\n      });\n    };\n  }\n\n  async componentDidMount() {\n    //判断页面是否安装Metamask\n    if (typeof window.ethereum !== 'undefined') {\n      const ethereum = window.ethereum; //禁止自动刷新，metamask要求写的\n\n      ethereum.autoRefreshOnNetworkChange = false;\n\n      try {\n        //第一次链接Metamask\n        const accounts = await ethereum.enable();\n        console.log(accounts); //初始化Provider\n\n        const provider = window['ethereum'];\n        console.log(provider); //获取网络ID\n\n        console.log(provider.chainId); //实例化Web3\n\n        const web3 = new Web3(provider);\n        console.log(web3); //导入abi文件\n\n        const abi = require(\"./contract.abi.json\"); //定义合约地址\n\n\n        const address = \"0xeE7a27A44902251638d7ea70bdD3B25B95C41662\"; //实例化合约\n\n        window.myContract = new web3.eth.Contract(abi.abi, address);\n        console.log(window.myContract);\n        window.defaultAccount = accounts[0].toLowerCase();\n        console.log(window.defaultAccount);\n        ethereum.on('accountsChanged', function (accounts) {\n          console.log(\"accountsChanged:\" + accounts);\n        });\n        ethereum.on('networkChanged', function (networkVersion) {\n          console.log(\"networkChanged:\" + networkVersion);\n        });\n      } catch (e) {}\n    } else {\n      console.log('没有metamask');\n    }\n  } //查询质押信息\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u8D28\\u62BC\\u6570\\u989D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"totalPledge\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \":\\u4ECA\\u65E5\\u5F85\\u9886\\u53D6\\u6570\\u989D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.GetterPendingItem();\n          },\n          children: \"\\u67E5\\u8D28\\u62BC\\u4FE1\\u606F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.Pending();\n          },\n          children: \"\\u4ECA\\u65E5\\u5F85\\u9886\\u53D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lcst/hv/hv1.1-web3/src/App.js"],"names":["React","Component","Web3","App","constructor","props","GetterPendingItem","window","myContract","methods","getPendingItem","call","from","defaultAccount","then","value","console","log","Pending","newPending","document","getElementById","pending","send","on","transactionHash","confirmationNumber","receipt","error","componentDidMount","ethereum","autoRefreshOnNetworkChange","accounts","enable","provider","chainId","web3","abi","require","address","eth","Contract","toLowerCase","networkVersion","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from \"web3\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\nasync componentDidMount() {\n  //判断页面是否安装Metamask\n  if (typeof window.ethereum !== 'undefined') {\n    const ethereum = window.ethereum\n    //禁止自动刷新，metamask要求写的\n    ethereum.autoRefreshOnNetworkChange = false\n\n    try {\n      //第一次链接Metamask\n      const accounts = await ethereum.enable()\n      console.log(accounts)\n      //初始化Provider\n      const provider = window['ethereum']\n      console.log(provider)\n      //获取网络ID\n      console.log(provider.chainId)\n      //实例化Web3\n      const web3 = new Web3(provider)\n      console.log(web3)\n      //导入abi文件\n      const abi = require(\"./contract.abi.json\")\n      //定义合约地址\n      const address = \"0xeE7a27A44902251638d7ea70bdD3B25B95C41662\"\n      //实例化合约\n      window.myContract = new web3.eth.Contract(abi.abi,address)\n      console.log(window.myContract)\n      window.defaultAccount = accounts[0].toLowerCase()\n      console.log(window.defaultAccount)\n\n      ethereum.on('accountsChanged', function (accounts) {\n        console.log(\"accountsChanged:\" + accounts)\n      })\n      ethereum.on('networkChanged', function (networkVersion) {\n        console.log(\"networkChanged:\" + networkVersion)\n      })\n    } catch (e) {\n\n    }\n  } else {\n    console.log('没有metamask')\n  }\n}\n//查询质押信息\nGetterPendingItem = () => {\n  window.myContract.methods.getPendingItem().call({from:window.defaultAccount}).then(value=>{\n    console.log(value)\n  })\n}\n\n //今日待领取\nPending =() =>{  \n  var newPending = document.getElementById('pending').value;\n  window.myContract.methods.pending(newPending).send()\n  .on('transactionHash',(transactionHash)=>{\n    console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n    console.log({ confirmationNumber: confirmationNumber, receipt: receipt })\n  })\n  .on('receipt',(receipt)=>{\n    console.log({ receipt: receipt })\n  })\n  .on('error',(error,receipt)=>{\n    console.log({ error: error, receipt: receipt })\n  })\n}\nrender() {\n  return (\n    <div>\n        <div >\n          <label >质押数额:</label><span id=\"totalPledge\" > </span> \n            <label >:今日待领取数额</label><span id=\"pending\" ></span>\n         </div>\n      <div></div>\n      <div>\n        <button onClick={() => { this.GetterPendingItem() }}>查质押信息</button>\n      </div>\n      <div>\n        <button onClick={() => { this.Pending() }}>今日待领取</button>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n}export default App;"]},"metadata":{},"sourceType":"module"}