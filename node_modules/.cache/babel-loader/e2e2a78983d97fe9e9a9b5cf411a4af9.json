{"ast":null,"code":"var _jsxFileName = \"/Users/lcst/hv/hv1.1-web3/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.GetterPendingItem = () => {\n      //   //查询用户未释放的token数量\n      //   var unReleased = 0;\n      //   var totalReleased = 0;\n      //   var totalAmount = 0;\n      //   window.myContract.methods.unReleased(window.defaultAccount).call({from:window.defaultAccount}).then(value=>{\n      //     console.log(value)\n      //     unReleased = value * Math.pow(10,-18);\n      //     this.setState({unReleased:unReleased})\n      //   })\n      // //查询用户存进去的token目前释放了多少\n      //   window.myContract.methods.totalReleased(window.defaultAccount).call({from:window.defaultAccount}).then(value=>{\n      //     console.log(value)\n      //     totalReleased = value * Math.pow(10,-18);\n      //     this.setState({totalReleased:totalReleased})\n      //   })\n      //   totalAmount = unReleased+totalReleased;\n      // this.setState({totalAmount:totalAmount})\n      //户可以取出来的token数量\n      window.myContract.methods.withrawable(window.defaultAccount).call({\n        from: window.defaultAccount\n      }).then(value => {\n        console.log(value);\n        this.setState({\n          withrawable: value * Math.pow(10, -18)\n        });\n      });\n    };\n\n    this.Harvest = () => {\n      window.myContract.methods.harvest().send({\n        from: window.defaultAccount\n      }).on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        }); //刷新待释放数据\n\n        if (confirmationNumber == 21) {\n          window.myContract.methods.withrawable(window.defaultAccount).call({\n            from: window.defaultAccount\n          }).then(value => {\n            console.log(value);\n            this.setState({\n              withrawable: value * Math.pow(10, -18)\n            });\n          });\n        }\n      }); //----------------------------------------------------------------------\n    };\n\n    this.state = {\n      totalAmount: 0,\n      withrawable: 0,\n      unReleased: 0,\n      totalReleased: 0\n    };\n  } //链接钱包\n\n\n  async DidMount() {\n    //判断页面是否安装Metamask\n    if (typeof window.ethereum !== 'undefined') {\n      const ethereum = window.ethereum; //禁止自动刷新，metamask要求写的\n\n      ethereum.autoRefreshOnNetworkChange = false;\n\n      try {\n        //第一次链接Metamask\n        const accounts = await ethereum.enable();\n        console.log(accounts); //初始化Provider\n\n        const provider = window['ethereum'];\n        console.log(provider); //获取网络ID\n\n        console.log(provider.chainId); //实例化Web3\n\n        const web3 = new Web3(provider);\n        console.log(web3); //导入abi文件\n\n        const abi = require(\"./contract.abi.json\"); //定义合约地址\n\n\n        const address = \"0xF22277851468603d581caFF1aa3F279dba8ADB2E\"; //实例化合约\n\n        window.myContract = new web3.eth.Contract(abi.abi, address);\n        console.log(window.myContract);\n        window.defaultAccount = accounts[0].toLowerCase();\n        console.log(window.defaultAccount);\n        ethereum.on('accountsChanged', function (accounts) {\n          console.log(\"accountsChanged:\" + accounts);\n        });\n        ethereum.on('networkChanged', function (networkVersion) {\n          console.log(\"networkChanged:\" + networkVersion);\n        });\n      } catch (e) {}\n    } else {\n      console.log('没有metamask');\n    } // 请求待释放数据\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.DidMount();\n          },\n          children: \"\\u94FE\\u63A5\\u94B1\\u5305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"-----------------------------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u5F85\\u91CA\\u653E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.withrawable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.Harvest();\n          },\n          children: \"\\u9886\\u53D6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lcst/hv/hv1.1-web3/src/App.js"],"names":["React","Component","Web3","App","constructor","props","GetterPendingItem","window","myContract","methods","withrawable","defaultAccount","call","from","then","value","console","log","setState","Math","pow","Harvest","harvest","send","on","transactionHash","confirmationNumber","receipt","state","totalAmount","unReleased","totalReleased","DidMount","ethereum","autoRefreshOnNetworkChange","accounts","enable","provider","chainId","web3","abi","require","address","eth","Contract","toLowerCase","networkVersion","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from \"web3\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalAmount:0,\n      withrawable:0,\n      unReleased:0,\n      totalReleased:0\n    };\n  }\n\n  //链接钱包\n  async DidMount () {\n    //判断页面是否安装Metamask\n    if (typeof window.ethereum !== 'undefined') {\n      const ethereum = window.ethereum\n      //禁止自动刷新，metamask要求写的\n      ethereum.autoRefreshOnNetworkChange = false\n\n      try {\n        //第一次链接Metamask\n        const accounts = await ethereum.enable()\n        console.log(accounts)\n        //初始化Provider\n        const provider = window['ethereum']\n        console.log(provider)\n        //获取网络ID\n        console.log(provider.chainId)\n        //实例化Web3\n        const web3 = new Web3(provider)\n        console.log(web3)\n        //导入abi文件\n        const abi = require(\"./contract.abi.json\")\n        //定义合约地址\n        const address = \"0xF22277851468603d581caFF1aa3F279dba8ADB2E\"\n        //实例化合约\n        window.myContract = new web3.eth.Contract(abi.abi,address)\n        console.log(window.myContract)\n        window.defaultAccount = accounts[0].toLowerCase()\n        console.log(window.defaultAccount)\n\n        ethereum.on('accountsChanged', function (accounts) {\n          console.log(\"accountsChanged:\" + accounts)\n        })\n        ethereum.on('networkChanged', function (networkVersion) {\n          console.log(\"networkChanged:\" + networkVersion)\n        })\n      } catch (e) {\n\n      }\n    } else {\n      console.log('没有metamask')\n    }\n    // 请求待释放数据\n\n\n  }\n\n\nGetterPendingItem = () => {\n//   //查询用户未释放的token数量\n//   var unReleased = 0;\n//   var totalReleased = 0;\n//   var totalAmount = 0;\n//   window.myContract.methods.unReleased(window.defaultAccount).call({from:window.defaultAccount}).then(value=>{\n//     console.log(value)\n//     unReleased = value * Math.pow(10,-18);\n//     this.setState({unReleased:unReleased})\n//   })\n// //查询用户存进去的token目前释放了多少\n//   window.myContract.methods.totalReleased(window.defaultAccount).call({from:window.defaultAccount}).then(value=>{\n//     console.log(value)\n//     totalReleased = value * Math.pow(10,-18);\n//     this.setState({totalReleased:totalReleased})\n//   })\n//   totalAmount = unReleased+totalReleased;\n// this.setState({totalAmount:totalAmount})\n\n//户可以取出来的token数量\nwindow.myContract.methods.withrawable(window.defaultAccount).call({from:window.defaultAccount}).then(value=>{\n  console.log(value)\n  this.setState({withrawable:value * Math.pow(10,-18)})\n})\n}\n\n //领取\nHarvest =() =>{ \n  window.myContract.methods.harvest().send({from:window.defaultAccount})\n  .on('transactionHash',(transactionHash)=>{\n    console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n    console.log({ confirmationNumber: confirmationNumber, receipt: receipt })\n    //刷新待释放数据\n    if(confirmationNumber ==21){\n      window.myContract.methods.withrawable(window.defaultAccount).call({from:window.defaultAccount}).then(value=>{\n        console.log(value)\n        this.setState({withrawable:value * Math.pow(10,-18)})\n      })\n    }\n  })\n  //----------------------------------------------------------------------\n}\nrender() {\n  \n  return (\n    <div>\n      <div><button onClick={() => { this.DidMount() }}>链接钱包</button></div>\n      <div><span>-----------------------------------------------------------</span></div>\n        <div>\n          {/*<label >用户未释放数量:</label><span> {this.state.unReleased}</span><br/>\n          <label >用户已经放数量:</label><span> {this.state.totalReleased}</span> <br/> */}\n            <label >待释放:</label><span>{this.state.withrawable}</span><br/>\n         </div>\n      <div></div>\n      <div>\n        <button onClick={() => { this.Harvest() }}>领取</button>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n}export default App;"]},"metadata":{},"sourceType":"module"}