{"ast":null,"code":"var _jsxFileName = \"/Users/lcst/car1.1/car1.1-web3/src/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.StakingSetApprovalForAll = () => {\n      window.nMyContract.methods.setApprovalForAll(window.tAddress, true).send({\n        from: window.defaultAccount\n      }).on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      });\n    };\n\n    this.Stake = () => {\n      //质押策略id\n      var strategyId = \"0x30120cc9d265f9a5dc395a40de2e0e246a94f9ab9841b89fcdb28e978c6fdb52\";\n      window.tMyContract.methods.stake(strategyId).send({\n        from: window.defaultAccount\n      }).on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      });\n    };\n\n    this.MarketSetApprovalForAll = () => {\n      window.nMyContract.methods.setApprovalForAll(window.aAddress, true).send({\n        from: window.defaultAccount\n      }).on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      });\n    };\n\n    this.SellItem = () => {\n      var __nftAddress = \"0x79f1F1aBd8eB5b80110cfe4ccBF266958bb301f9\";\n      var tokenid = 4;\n\n      var _price = 1000 * Math.pow(10, -18);\n\n      window.tMyContract.methods.sellItem(__nftAddress, tokenid, _price).send({\n        from: window.defaultAccount\n      }).on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      });\n    };\n\n    this.Revoke = () => {\n      window.tMyContract.methods.revoke(strategyId).send({\n        from: window.defaultAccount\n      }).on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n      }).on('confirmation', (confirmationNumber, receipt) => {\n        console.log({\n          confirmationNumber: confirmationNumber,\n          receipt: receipt\n        });\n      });\n    };\n\n    this.state = {\n      value: 0\n    };\n  } //链接钱包\n\n\n  async componentDidMount() {\n    //判断页面是否安装Metamask\n    if (typeof window.ethereum !== 'undefined') {\n      const ethereum = window.ethereum; //禁止自动刷新，metamask要求写的\n\n      ethereum.autoRefreshOnNetworkChange = false;\n\n      try {\n        //第一次链接Metamask\n        const accounts = await ethereum.enable();\n        console.log(accounts); //初始化Provider\n\n        const provider = window['ethereum'];\n        console.log(provider); //获取网络ID\n\n        console.log(provider.chainId); //实例化Web3\n\n        const web3 = new Web3(provider);\n        console.log(web3); // ---------------------定义n车型--------------------\n        //导入abi文件\n\n        const nAbi = require(\"./abi/NTierCar.json\"); //定义N车型合约地址\n\n\n        const nAddress = \"0xc29270cf76D77f1840e7ED67B9C4EB68aC815e14\"; //实例化合约\n\n        window.nMyContract = new web3.eth.Contract(nAbi.abi, nAddress);\n        console.log(\"nMyContract\" + window.nMyContract); //--------------------------END -----------------------\n        //------------------------定义质押---------------------\n        //导入abi文件\n\n        const tAbi = require(\"./abi/Staking.json\"); //定义N车型合约地址\n\n\n        window.tAddress = \"0x7FC006357fc0EC1602f13d2FADe179b11f5C8056\"; //实例化合约\n\n        window.tMyContract = new web3.eth.Contract(tAbi.abi, window.tAddress);\n        console.log(\"tMyContract\" + window.tMyContract); //--------------------------END -----------------------\n        // --------------------------拍卖-----------------------------\n        //导入abi文件\n\n        const aAbi = require(\"./abi/AuctionMarket.json\"); //定义N车型合约地址\n\n\n        window.aAddress = \"0xEf8d9cA370CE7262cC4EC70b2B0578EcBB4B8a4F\"; //实例化合约\n\n        window.aMyContract = new web3.eth.Contract(nAbi.abi, nAddress);\n        console.log(\"aMyContract\" + window.aMyContract); // ------------------------end--------------------------------------\n\n        window.defaultAccount = accounts[0].toLowerCase();\n        console.log(window.defaultAccount);\n        ethereum.on('accountsChanged', function (accounts) {\n          console.log(\"accountsChanged:\" + accounts);\n        });\n        ethereum.on('networkChanged', function (networkVersion) {\n          console.log(\"networkChanged:\" + networkVersion);\n        });\n      } catch (e) {}\n    } else {\n      console.log('没有metamask');\n    } // 请求待释放数据\n\n  } // ------------------------1、质押--------------------------------------------------------\n  //授权\n\n\n  //--------------------------------end------------------------------------------\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.StakingSetApprovalForAll();\n          },\n          children: \"\\u8D28\\u62BC\\u6388\\u6743\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.Stake();\n          },\n          children: \"\\u8D28\\u62BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lcst/car1.1/car1.1-web3/src/App.js"],"names":["React","Component","Web3","App","constructor","props","StakingSetApprovalForAll","window","nMyContract","methods","setApprovalForAll","tAddress","send","from","defaultAccount","on","transactionHash","console","log","confirmationNumber","receipt","Stake","strategyId","tMyContract","stake","MarketSetApprovalForAll","aAddress","SellItem","__nftAddress","tokenid","_price","Math","pow","sellItem","Revoke","revoke","state","value","componentDidMount","ethereum","autoRefreshOnNetworkChange","accounts","enable","provider","chainId","web3","nAbi","require","nAddress","eth","Contract","abi","tAbi","aAbi","aMyContract","toLowerCase","networkVersion","e","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from \"web3\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value:0\n    };\n  }\n\n  //链接钱包\n  async componentDidMount() {\n\n    //判断页面是否安装Metamask\n    if (typeof window.ethereum !== 'undefined') {\n      const ethereum = window.ethereum\n      //禁止自动刷新，metamask要求写的\n      ethereum.autoRefreshOnNetworkChange = false\n\n      try {\n        //第一次链接Metamask\n        const accounts = await ethereum.enable()\n        console.log(accounts)\n        //初始化Provider\n        const provider = window['ethereum']\n        console.log(provider)\n        //获取网络ID\n        console.log(provider.chainId)\n        //实例化Web3\n        const web3 = new Web3(provider)     \n        console.log(web3)\n        // ---------------------定义n车型--------------------\n        //导入abi文件\n        const nAbi = require(\"./abi/NTierCar.json\")\n        //定义N车型合约地址\n        const nAddress = \"0xc29270cf76D77f1840e7ED67B9C4EB68aC815e14\"\n        //实例化合约\n        window.nMyContract = new web3.eth.Contract(nAbi.abi,nAddress)\n        console.log(\"nMyContract\"+window.nMyContract)\n        //--------------------------END -----------------------\n\n        //------------------------定义质押---------------------\n        //导入abi文件\n        const tAbi = require(\"./abi/Staking.json\")\n        //定义N车型合约地址\n        window.tAddress = \"0x7FC006357fc0EC1602f13d2FADe179b11f5C8056\"\n        //实例化合约\n        window.tMyContract = new web3.eth.Contract(tAbi.abi,window.tAddress)\n        console.log(\"tMyContract\"+window.tMyContract)\n        //--------------------------END -----------------------\n         \n        // --------------------------拍卖-----------------------------\n        //导入abi文件\n        const aAbi = require(\"./abi/AuctionMarket.json\")\n        //定义N车型合约地址\n        window.aAddress = \"0xEf8d9cA370CE7262cC4EC70b2B0578EcBB4B8a4F\"\n        //实例化合约\n        window.aMyContract = new web3.eth.Contract(nAbi.abi,nAddress)\n        console.log(\"aMyContract\"+window.aMyContract)\n       // ------------------------end--------------------------------------\n\n\n\n        window.defaultAccount = accounts[0].toLowerCase()\n        console.log(window.defaultAccount)\n\n        ethereum.on('accountsChanged', function (accounts) {\n          console.log(\"accountsChanged:\" + accounts)\n        })\n        ethereum.on('networkChanged', function (networkVersion) {\n          console.log(\"networkChanged:\" + networkVersion)\n        })\n      } catch (e) {\n\n      }\n    } else {\n      console.log('没有metamask')\n    }\n    // 请求待释放数据\n\n\n  }\n\n  // ------------------------1、质押--------------------------------------------------------\n  //授权\n  StakingSetApprovalForAll =() =>{\n    window.nMyContract.methods.setApprovalForAll(window.tAddress,true).send({from:window.defaultAccount})\n  .on('transactionHash',(transactionHash)=>{\n    console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n    console.log({ confirmationNumber: confirmationNumber, receipt: receipt });\n  })\n}\n\n//质押\nStake =() =>{\n  //质押策略id\n  var strategyId = \"0x30120cc9d265f9a5dc395a40de2e0e246a94f9ab9841b89fcdb28e978c6fdb52\";\n  window.tMyContract.methods.stake(strategyId).send({from:window.defaultAccount})\n.on('transactionHash',(transactionHash)=>{\n  console.log('transactionHash',transactionHash)\n})\n.on('confirmation',(confirmationNumber,receipt)=>{\n  console.log({ confirmationNumber: confirmationNumber, receipt: receipt });\n})\n \n}\n\n //------------------------------end----------------------------------------\n\n//--------------------------------拍卖----------------------------------------\n  //授权\n  MarketSetApprovalForAll =() =>{\n    window.nMyContract.methods.setApprovalForAll(window.aAddress,true).send({from:window.defaultAccount})\n  .on('transactionHash',(transactionHash)=>{\n    console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n    console.log({ confirmationNumber: confirmationNumber, receipt: receipt });\n  })\n}\n//上架要拍卖的物品\nSellItem =() =>{\n    var __nftAddress = \"0x79f1F1aBd8eB5b80110cfe4ccBF266958bb301f9\";\n    var tokenid =4;\n    var _price = 1000 * Math.pow(10,-18);\n    window.tMyContract.methods.sellItem(__nftAddress,tokenid,_price).send({from:window.defaultAccount})\n  .on('transactionHash',(transactionHash)=>{\n    console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n    console.log({ confirmationNumber: confirmationNumber, receipt: receipt });\n  })\n}\n\n//撤销拍卖\nRevoke =() =>{\n  window.tMyContract.methods.revoke(strategyId).send({from:window.defaultAccount})\n  .on('transactionHash',(transactionHash)=>{\n  console.log('transactionHash',transactionHash)\n  })\n  .on('confirmation',(confirmationNumber,receipt)=>{\n  console.log({ confirmationNumber: confirmationNumber, receipt: receipt });\n  })\n}\n\n\n//--------------------------------end------------------------------------------\n\n\nrender() {\n  \n  return (\n    <div>\n      <div> <button onClick={() => { this.StakingSetApprovalForAll() }}>质押授权</button></div>\n      <div> <button onClick={() => { this.Stake() }}>质押</button></div>\n    </div>\n  );\n}\n}export default App;"]},"metadata":{},"sourceType":"module"}